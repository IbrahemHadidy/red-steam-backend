{"version":3,"sources":["../../../../../src/modules/repositories/sql/reviews/review.entity.ts"],"sourcesContent":["// TypeORM\r\nimport {\r\n  AfterInsert,\r\n  AfterRemove,\r\n  AfterUpdate,\r\n  BaseEntity,\r\n  Column,\r\n  Entity,\r\n  JoinColumn,\r\n  ManyToOne,\r\n  PrimaryGeneratedColumn,\r\n} from 'typeorm';\r\n\r\n// Entities\r\nimport { Game } from '@repositories/sql/games/game.entity';\r\nimport { User } from '@repositories/sql/users/user.entity';\r\n\r\n// Types\r\nimport type { Game as GameType } from '@repositories/sql/games/game.entity';\r\nimport type { User as UserType } from '@repositories/sql/users/user.entity';\r\n\r\n@Entity({ name: 'reviews' })\r\nexport class Review extends BaseEntity {\r\n  @PrimaryGeneratedColumn('increment', { name: 'review_id' })\r\n  id: number;\r\n\r\n  @ManyToOne(() => User, (user: UserType) => user.reviews)\r\n  @JoinColumn({ name: 'user_id' })\r\n  user: UserType;\r\n\r\n  @ManyToOne(() => Game, (game: GameType) => game.reviews)\r\n  @JoinColumn({ name: 'game_id' })\r\n  game: GameType;\r\n\r\n  @Column()\r\n  positive: boolean;\r\n\r\n  @Column({ default: new Date() })\r\n  date: Date;\r\n\r\n  @Column()\r\n  content: string;\r\n\r\n  @AfterInsert()\r\n  @AfterUpdate()\r\n  @AfterRemove()\r\n  async updateGameReviewsData() {\r\n    if (this.game) {\r\n      await this.game.updateReviewsData();\r\n    }\r\n  }\r\n}\r\n"],"names":["Review","BaseEntity","updateGameReviewsData","game","updateReviewsData","name","User","user","reviews","Game","default","Date"],"mappings":"AAAA,UAAU;;;;;+BAsBGA;;;eAAAA;;;yBAXN;4BAGc;4BACA;;;;;;;;;;AAOd,IAAA,AAAMA,SAAN,MAAMA,eAAeC,mBAAU;IAqBpC,MAGMC,wBAAwB;QAC5B,IAAI,IAAI,CAACC,IAAI,EAAE;YACb,MAAM,IAAI,CAACA,IAAI,CAACC,iBAAiB;QACnC;IACF;AACF;;;QA5ByCC,MAAM;;;;;gCAG5BC,gBAAI,GAAGC,OAAmBA,KAAKC,OAAO;;QACzCH,MAAM;;;;;gCAGHI,gBAAI,GAAGN,OAAmBA,KAAKK,OAAO;;QACzCH,MAAM;;;;;;;;;;QAMVK,SAAS,IAAIC;;;;;;;;;;;;;;;;;;QAhBfN,MAAM"}