{"version":3,"sources":["../../../../../src/modules/repositories/sql/games-pricing/game-pricing.entity.ts"],"sourcesContent":["// NestJS\r\nimport { BadRequestException } from '@nestjs/common';\r\n\r\n// TypeORM\r\nimport {\r\n  AfterLoad,\r\n  BaseEntity,\r\n  BeforeInsert,\r\n  BeforeUpdate,\r\n  Column,\r\n  Entity,\r\n  OneToOne,\r\n  PrimaryGeneratedColumn,\r\n} from 'typeorm';\r\n\r\n// DecimalJS\r\nimport Decimal from 'decimal.js';\r\n\r\n// Entities\r\nimport { Game } from '@repositories/sql/games/game.entity';\r\n\r\n// Types\r\nimport type { Game as GameType } from '@repositories/sql/games/game.entity';\r\n\r\n@Entity({ name: 'games_pricing' })\r\nexport class GamePricing extends BaseEntity {\r\n  @PrimaryGeneratedColumn('increment', { name: 'pricing_id' })\r\n  id: number;\r\n\r\n  @Column({ default: false })\r\n  free: boolean;\r\n\r\n  @Column({ nullable: false, default: '0.00', type: 'decimal', precision: 10, scale: 2 })\r\n  basePrice: string;\r\n\r\n  @Column({ default: false })\r\n  discount?: boolean;\r\n\r\n  @Column({ nullable: true, type: 'float' })\r\n  discountPercentage?: number;\r\n\r\n  @Column({ nullable: true, type: 'decimal', precision: 10, scale: 2 })\r\n  discountPrice?: string;\r\n\r\n  @Column({ nullable: true })\r\n  discountStartDate?: Date;\r\n\r\n  @Column({ nullable: true })\r\n  discountEndDate?: Date;\r\n\r\n  @Column({ nullable: true })\r\n  offerType?: 'SPECIAL PROMOTION' | 'WEEKEND DEAL';\r\n\r\n  @Column({ type: 'decimal', precision: 10, scale: 2, default: '0.00' })\r\n  price: string;\r\n\r\n  @OneToOne(() => Game, (game: GameType) => game.pricing)\r\n  game?: GameType;\r\n\r\n  static skipDiscountCheck = false;\r\n\r\n  // Final calculations\r\n  @BeforeInsert()\r\n  @BeforeUpdate()\r\n  finalize() {\r\n    const basePriceDecimal = new Decimal(this.basePrice || '0.00');\r\n    const discountPriceDecimal = new Decimal(this.discountPrice || '0.00');\r\n\r\n    if (this.free) {\r\n      this.price = '0.00';\r\n      this.discount = false;\r\n      this.basePrice = '0.00';\r\n      this.discountPrice = null;\r\n      this.offerType = null;\r\n      this.discountStartDate = null;\r\n      this.discountEndDate = null;\r\n      this.discountPercentage = null;\r\n    } else {\r\n      this.price = this.discount ? discountPriceDecimal.toFixed(2) : basePriceDecimal.toFixed(2);\r\n\r\n      if (this.discount) {\r\n        if (basePriceDecimal.lessThanOrEqualTo(0)) {\r\n          throw new BadRequestException('Base price must be greater than 0 to calculate discount percentage');\r\n        }\r\n        this.discountPercentage = Math.round(\r\n          basePriceDecimal.minus(discountPriceDecimal).dividedBy(basePriceDecimal).times(100).toNumber(),\r\n        );\r\n      } else {\r\n        this.discountPrice = null;\r\n        this.discountPercentage = null;\r\n        this.discountStartDate = null;\r\n        this.discountEndDate = null;\r\n        this.offerType = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  @AfterLoad()\r\n  checkDiscountEndDate() {\r\n    if (GamePricing.skipDiscountCheck) return;\r\n\r\n    if (this.discount) {\r\n      if (this.discountEndDate < new Date() || this.discountStartDate > new Date()) {\r\n        this.discount = false;\r\n        this.discountPrice = null;\r\n        this.discountPercentage = null;\r\n        this.discountStartDate = null;\r\n        this.discountEndDate = null;\r\n        this.offerType = null;\r\n      } else {\r\n        const discountPriceDecimal = new Decimal(this.discountPrice || '0.00');\r\n        if (discountPriceDecimal.equals(0)) this.free = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["GamePricing","BaseEntity","skipDiscountCheck","finalize","basePriceDecimal","Decimal","basePrice","discountPriceDecimal","discountPrice","free","price","discount","offerType","discountStartDate","discountEndDate","discountPercentage","toFixed","lessThanOrEqualTo","BadRequestException","Math","round","minus","dividedBy","times","toNumber","checkDiscountEndDate","Date","equals","name","default","nullable","type","precision","scale","Game","game","pricing"],"mappings":"AAAA,SAAS;;;;;+BAyBIA;;;eAAAA;;;wBAxBuB;yBAY7B;gEAGa;4BAGC;;;;;;;;;;;;;;;AAMd,IAAA,AAAMA,cAAN,MAAMA,oBAAoBC,mBAAU;;aAkClCC,oBAAoB;;IAE3B,qBAAqB;IAGrBC,WAAW;QACT,MAAMC,mBAAmB,IAAIC,gBAAO,CAAC,IAAI,CAACC,SAAS,IAAI;QACvD,MAAMC,uBAAuB,IAAIF,gBAAO,CAAC,IAAI,CAACG,aAAa,IAAI;QAE/D,IAAI,IAAI,CAACC,IAAI,EAAE;YACb,IAAI,CAACC,KAAK,GAAG;YACb,IAAI,CAACC,QAAQ,GAAG;YAChB,IAAI,CAACL,SAAS,GAAG;YACjB,IAAI,CAACE,aAAa,GAAG;YACrB,IAAI,CAACI,SAAS,GAAG;YACjB,IAAI,CAACC,iBAAiB,GAAG;YACzB,IAAI,CAACC,eAAe,GAAG;YACvB,IAAI,CAACC,kBAAkB,GAAG;QAC5B,OAAO;YACL,IAAI,CAACL,KAAK,GAAG,IAAI,CAACC,QAAQ,GAAGJ,qBAAqBS,OAAO,CAAC,KAAKZ,iBAAiBY,OAAO,CAAC;YAExF,IAAI,IAAI,CAACL,QAAQ,EAAE;gBACjB,IAAIP,iBAAiBa,iBAAiB,CAAC,IAAI;oBACzC,MAAM,IAAIC,2BAAmB,CAAC;gBAChC;gBACA,IAAI,CAACH,kBAAkB,GAAGI,KAAKC,KAAK,CAClChB,iBAAiBiB,KAAK,CAACd,sBAAsBe,SAAS,CAAClB,kBAAkBmB,KAAK,CAAC,KAAKC,QAAQ;YAEhG,OAAO;gBACL,IAAI,CAAChB,aAAa,GAAG;gBACrB,IAAI,CAACO,kBAAkB,GAAG;gBAC1B,IAAI,CAACF,iBAAiB,GAAG;gBACzB,IAAI,CAACC,eAAe,GAAG;gBACvB,IAAI,CAACF,SAAS,GAAG;YACnB;QACF;IACF;IAGAa,uBAAuB;QACrB,IAAIzB,YAAYE,iBAAiB,EAAE;QAEnC,IAAI,IAAI,CAACS,QAAQ,EAAE;YACjB,IAAI,IAAI,CAACG,eAAe,GAAG,IAAIY,UAAU,IAAI,CAACb,iBAAiB,GAAG,IAAIa,QAAQ;gBAC5E,IAAI,CAACf,QAAQ,GAAG;gBAChB,IAAI,CAACH,aAAa,GAAG;gBACrB,IAAI,CAACO,kBAAkB,GAAG;gBAC1B,IAAI,CAACF,iBAAiB,GAAG;gBACzB,IAAI,CAACC,eAAe,GAAG;gBACvB,IAAI,CAACF,SAAS,GAAG;YACnB,OAAO;gBACL,MAAML,uBAAuB,IAAIF,gBAAO,CAAC,IAAI,CAACG,aAAa,IAAI;gBAC/D,IAAID,qBAAqBoB,MAAM,CAAC,IAAI,IAAI,CAAClB,IAAI,GAAG;YAClD;QACF;IACF;AACF;;;QAzFyCmB,MAAM;;;;;;QAGnCC,SAAS;;;;;;QAGTC,UAAU;QAAOD,SAAS;QAAQE,MAAM;QAAWC,WAAW;QAAIC,OAAO;;;;;;QAGzEJ,SAAS;;;;;;QAGTC,UAAU;QAAMC,MAAM;;;;;;QAGtBD,UAAU;QAAMC,MAAM;QAAWC,WAAW;QAAIC,OAAO;;;;;;QAGvDH,UAAU;;;;;;QAGVA,UAAU;;;;;;QAGVA,UAAU;;;;;;QAGVC,MAAM;QAAWC,WAAW;QAAIC,OAAO;QAAGJ,SAAS;;;;;+BAG7CK,gBAAI,GAAGC,OAAmBA,KAAKC,OAAO;;;;;;;;;;;;;;;;;;QAhC9CR,MAAM"}