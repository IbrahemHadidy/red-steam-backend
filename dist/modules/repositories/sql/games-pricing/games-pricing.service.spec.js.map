{"version":3,"sources":["../../../../../src/modules/repositories/sql/games-pricing/games-pricing.service.spec.ts"],"sourcesContent":["import { BadRequestException, Logger, NotFoundException } from '@nestjs/common';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { Test, TestingModule } from '@nestjs/testing';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { environmentConfig, getSqlTypeOrmConfig } from '@test/integration-setup';\r\n\r\n// Modules\r\nimport { CompaniesModule } from '@repositories/sql/companies/companies.module';\r\nimport { GamesFeaturesModule } from '@repositories/sql/games-features/games-features.module';\r\nimport { GamesLanguagesModule } from '@repositories/sql/games-languages/games-languages.module';\r\nimport { GamesPricingModule } from '@repositories/sql/games-pricing/games-pricing.module';\r\nimport { GamesTagsModule } from '@repositories/sql/games-tags/games-tags.module';\r\nimport { GamesModule } from '@repositories/sql/games/games.module';\r\n\r\n// Services\r\nimport { CompaniesService } from '@repositories/sql/companies/companies.service';\r\nimport { GamesFeaturesService } from '@repositories/sql/games-features/games-features.service';\r\nimport { GamesLanguagesService } from '@repositories/sql/games-languages/games-languages.service';\r\nimport { GamesPricingService } from '@repositories/sql/games-pricing/games-pricing.service';\r\nimport { GamesTagsService } from '@repositories/sql/games-tags/games-tags.service';\r\nimport { GamesService } from '@repositories/sql/games/games.service';\r\n\r\n// Entities\r\nimport { GamePricing } from '@repositories/sql/games-pricing/game-pricing.entity';\r\nimport { Game } from '@repositories/sql/games/game.entity';\r\n\r\ndescribe('gamePricingService', () => {\r\n  let game: Game;\r\n  let game2: Game;\r\n  let gamePricing: GamePricing;\r\n  let gamePricing2: GamePricing;\r\n  let gamesService: GamesService;\r\n  let gamesPricingService: GamesPricingService;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      imports: [\r\n        ConfigModule.forRoot(environmentConfig),\r\n        TypeOrmModule.forRootAsync({\r\n          inject: [ConfigService],\r\n          name: 'sql',\r\n          useFactory: async (configService: ConfigService) => getSqlTypeOrmConfig(configService),\r\n        }),\r\n        GamesPricingModule,\r\n        GamesModule,\r\n        CompaniesModule,\r\n        GamesLanguagesModule,\r\n        GamesFeaturesModule,\r\n        GamesTagsModule,\r\n      ],\r\n      providers: [\r\n        GamesPricingService,\r\n        GamesService,\r\n        CompaniesService,\r\n        GamesLanguagesService,\r\n        GamesFeaturesService,\r\n        GamesTagsService,\r\n        Logger,\r\n      ],\r\n    }).compile();\r\n\r\n    gamesService = module.get<GamesService>(GamesService);\r\n    gamesPricingService = module.get<GamesPricingService>(GamesPricingService);\r\n\r\n    game = await gamesService.create({\r\n      name: 'Test Game',\r\n      category: 'Test Category',\r\n      description: 'Test Description',\r\n      releaseDate: new Date(),\r\n      publishers: [],\r\n      developers: [],\r\n      thumbnailEntries: {\r\n        mainImage: null,\r\n        backgroundImage: null,\r\n        menuImg: null,\r\n        horizontalHeaderImage: null,\r\n        verticalHeaderImage: null,\r\n        smallHeaderImage: null,\r\n        searchImage: null,\r\n        tabImage: null,\r\n      },\r\n      imageEntries: [],\r\n      videoEntries: [],\r\n      tags: [],\r\n      pricing: {\r\n        free: false,\r\n        discount: false,\r\n        basePrice: 10,\r\n        discountPrice: 5,\r\n        discountStartDate: new Date(),\r\n        discountEndDate: new Date('2024-10-30'),\r\n        offerType: 'SPECIAL PROMOTION',\r\n      },\r\n      features: [],\r\n      languages: [],\r\n      platformEntries: {\r\n        win: true,\r\n        mac: false,\r\n      },\r\n      link: 'Test Link',\r\n      about: 'Test About',\r\n      mature: false,\r\n      matureDescription: 'Test Mature Description',\r\n      systemRequirements: {\r\n        mini: {},\r\n        recommended: {},\r\n      },\r\n      legal: 'Test Legal',\r\n    });\r\n\r\n    game2 = await gamesService.create({\r\n      name: 'Test Game2',\r\n      category: 'Test Category',\r\n      description: 'Test Description',\r\n      releaseDate: new Date(),\r\n      publishers: [],\r\n      developers: [],\r\n      thumbnailEntries: {\r\n        mainImage: null,\r\n        backgroundImage: null,\r\n        menuImg: null,\r\n        horizontalHeaderImage: null,\r\n        verticalHeaderImage: null,\r\n        smallHeaderImage: null,\r\n        searchImage: null,\r\n        tabImage: null,\r\n      },\r\n      imageEntries: [],\r\n      videoEntries: [],\r\n      tags: [],\r\n      pricing: {\r\n        free: false,\r\n        discount: false,\r\n        basePrice: 10,\r\n        discountPrice: 5,\r\n        discountStartDate: new Date(),\r\n        discountEndDate: new Date('2024-11-30'),\r\n        offerType: 'WEEKEND DEAL',\r\n      },\r\n      features: [],\r\n      languages: [],\r\n      platformEntries: {\r\n        win: true,\r\n        mac: false,\r\n      },\r\n      link: 'Test Link',\r\n      about: 'Test About',\r\n      mature: false,\r\n      matureDescription: 'Test Mature Description',\r\n      systemRequirements: {\r\n        mini: {},\r\n        recommended: {},\r\n      },\r\n      legal: 'Test Legal',\r\n    });\r\n\r\n    gamePricing = game.pricing;\r\n    gamePricing2 = game2.pricing;\r\n  });\r\n\r\n  afterEach(async () => {\r\n    await gamesService.removeAll();\r\n  });\r\n\r\n  describe('getAll', () => {\r\n    it('should return all pricings', async () => {\r\n      const pricings = await gamesPricingService.getAll('id', 'ASC');\r\n\r\n      // Assertions\r\n      expect(pricings.length).toBe(2);\r\n    });\r\n  });\r\n\r\n  describe('getById', () => {\r\n    it('should return the pricing with the given id', async () => {\r\n      const pricing = await gamesPricingService.getById(gamePricing.id);\r\n\r\n      // Assertions\r\n      expect(pricing.id).toBe(gamePricing.id);\r\n    });\r\n\r\n    it('should throw NotFoundException if pricing is not found', async () => {\r\n      await expect(gamesPricingService.getById(9999)).rejects.toThrow(NotFoundException);\r\n    });\r\n  });\r\n\r\n  describe('getByGameId', () => {\r\n    it('should return the pricing with the given game id', async () => {\r\n      const pricing = await gamesPricingService.getByGameId(game.id);\r\n\r\n      // Assertions\r\n      expect(pricing.id).toBe(gamePricing.id);\r\n    });\r\n\r\n    it('should throw NotFoundException if pricing is not found', async () => {\r\n      await expect(gamesPricingService.getByGameId(9999)).rejects.toThrow(NotFoundException);\r\n    });\r\n  });\r\n\r\n  describe('getGamesByPricing', () => {\r\n    it('should return the games with the given pricing options', async () => {\r\n      const games = await gamesPricingService.getGamesByPricing({\r\n        free: false,\r\n        discount: false,\r\n        sortBy: 'basePrice',\r\n        sortOrder: 'ASC',\r\n        minPrice: 0,\r\n        maxPrice: 100,\r\n        skip: 0,\r\n        take: 10,\r\n      });\r\n\r\n      // Assertions\r\n      expect(games.length).toBe(2);\r\n    });\r\n\r\n    it('should throw BadRequestException if game is free and discounted', async () => {\r\n      await expect(\r\n        gamesPricingService.getGamesByPricing({\r\n          free: true,\r\n          discount: true,\r\n          sortBy: 'basePrice',\r\n          sortOrder: 'ASC',\r\n          minPrice: 0,\r\n          maxPrice: 100,\r\n          skip: 0,\r\n          take: 10,\r\n        }),\r\n      ).rejects.toThrow(BadRequestException);\r\n    });\r\n  });\r\n\r\n  describe('create', () => {\r\n    it('should create a new game pricing', async () => {\r\n      const pricing = await gamesPricingService.create({\r\n        free: false,\r\n        basePrice: 10,\r\n        discount: true,\r\n        discountPrice: 5,\r\n        discountStartDate: new Date(),\r\n        discountEndDate: new Date('2024-12-31'),\r\n        offerType: 'SPECIAL PROMOTION',\r\n        game: new Game(),\r\n      });\r\n\r\n      // Assertions\r\n      expect(pricing).toEqual(\r\n        expect.objectContaining({\r\n          free: false,\r\n          basePrice: 10,\r\n          discountPrice: 5,\r\n          discountEndDate: new Date('2024-12-31'),\r\n          offerType: 'SPECIAL PROMOTION',\r\n        }),\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('update', () => {\r\n    it('should update the game pricing with the given id', async () => {\r\n      const updatedPricing = await gamesPricingService.update(gamePricing2.id, {\r\n        free: true,\r\n        basePrice: 10,\r\n        discountPrice: 5,\r\n        discountStartDate: new Date(),\r\n        discountEndDate: new Date('2024-12-31'),\r\n        offerType: 'SPECIAL PROMOTION',\r\n      });\r\n\r\n      // Assertions\r\n      expect(updatedPricing).toEqual(\r\n        expect.objectContaining({\r\n          free: true,\r\n          basePrice: 0,\r\n        }),\r\n      );\r\n    });\r\n\r\n    it('should throw NotFoundException if game pricing is not found', async () => {\r\n      await expect(\r\n        gamesPricingService.update(9999, {\r\n          free: true,\r\n          basePrice: 10,\r\n          discountPrice: 5,\r\n          discountStartDate: new Date(),\r\n          discountEndDate: new Date('2024-12-31'),\r\n          offerType: 'SPECIAL PROMOTION',\r\n        }),\r\n      ).rejects.toThrow(NotFoundException);\r\n    });\r\n  });\r\n\r\n  describe('remove', () => {\r\n    it('should remove the game pricing with the given id', async () => {\r\n      await gamesService.remove(game.id);\r\n      const pricings = await gamesPricingService.getAll('id', 'ASC');\r\n\r\n      // Assertions\r\n      expect(pricings.length).toBe(1);\r\n    });\r\n\r\n    it('should throw NotFoundException if game pricing is not found', async () => {\r\n      await expect(gamesPricingService.remove(9999)).rejects.toThrow(NotFoundException);\r\n    });\r\n  });\r\n\r\n  describe('removeAll', () => {\r\n    it('should remove all game pricings', async () => {\r\n      await gamesService.removeAll();\r\n      const pricings = await gamesPricingService.getAll('id', 'ASC');\r\n\r\n      // Assertions\r\n      expect(pricings.length).toBe(0);\r\n    });\r\n  });\r\n});\r\n"],"names":["describe","game","game2","gamePricing","gamePricing2","gamesService","gamesPricingService","beforeEach","module","Test","createTestingModule","imports","ConfigModule","forRoot","environmentConfig","TypeOrmModule","forRootAsync","inject","ConfigService","name","useFactory","configService","getSqlTypeOrmConfig","GamesPricingModule","GamesModule","CompaniesModule","GamesLanguagesModule","GamesFeaturesModule","GamesTagsModule","providers","GamesPricingService","GamesService","CompaniesService","GamesLanguagesService","GamesFeaturesService","GamesTagsService","Logger","compile","get","create","category","description","releaseDate","Date","publishers","developers","thumbnailEntries","mainImage","backgroundImage","menuImg","horizontalHeaderImage","verticalHeaderImage","smallHeaderImage","searchImage","tabImage","imageEntries","videoEntries","tags","pricing","free","discount","basePrice","discountPrice","discountStartDate","discountEndDate","offerType","features","languages","platformEntries","win","mac","link","about","mature","matureDescription","systemRequirements","mini","recommended","legal","afterEach","removeAll","it","pricings","getAll","expect","length","toBe","getById","id","rejects","toThrow","NotFoundException","getByGameId","games","getGamesByPricing","sortBy","sortOrder","minPrice","maxPrice","skip","take","BadRequestException","Game","toEqual","objectContaining","updatedPricing","update","remove"],"mappings":"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"}