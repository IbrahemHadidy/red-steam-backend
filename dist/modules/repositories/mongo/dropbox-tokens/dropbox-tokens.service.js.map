{"version":3,"sources":["../../../../../src/modules/repositories/mongo/dropbox-tokens/dropbox-tokens.service.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n// TypeORM\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\n\r\n// Entities\r\nimport { DropboxToken } from '@repositories/mongo/dropbox-tokens/dropbox-token.entity';\r\n\r\n// Types\r\nimport type { DropboxToken as DropboxTokenType } from '@repositories/mongo/dropbox-tokens/dropbox-token.entity';\r\n\r\n@Injectable()\r\nexport class DropboxTokensService {\r\n  constructor(\r\n    @InjectRepository(DropboxToken, 'mongo')\r\n    private readonly dropboxTokenRepository: Repository<DropboxTokenType>,\r\n  ) {}\r\n\r\n  async getToken(): Promise<DropboxToken> {\r\n    const token = await this.dropboxTokenRepository.findOne({});\r\n    return token;\r\n  }\r\n\r\n  async saveToken(token: Partial<DropboxToken>): Promise<Partial<DropboxTokenType>> {\r\n    await this.dropboxTokenRepository.delete({});\r\n    return await this.dropboxTokenRepository.save(token);\r\n  }\r\n}\r\n"],"names":["DropboxTokensService","constructor","dropboxTokenRepository","getToken","token","findOne","saveToken","delete","save"],"mappings":"AAAA,SAAS;;;;;+BAcIA;;;eAAAA;;;wBAbc;yBAGM;0BACN;oCAGE;;;;;;;;;;;;;;;AAMtB,IAAA,AAAMA,uBAAN,MAAMA;IACXC,YACE,AACiBC,sBAAoD,CACrE;aADiBA,yBAAAA;IAChB;IAEH,MAAMC,WAAkC;QACtC,MAAMC,QAAQ,MAAM,IAAI,CAACF,sBAAsB,CAACG,OAAO,CAAC,CAAC;QACzD,OAAOD;IACT;IAEA,MAAME,UAAUF,KAA4B,EAAsC;QAChF,MAAM,IAAI,CAACF,sBAAsB,CAACK,MAAM,CAAC,CAAC;QAC1C,OAAO,MAAM,IAAI,CAACL,sBAAsB,CAACM,IAAI,CAACJ;IAChD;AACF"}