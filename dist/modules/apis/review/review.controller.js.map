{"version":3,"sources":["../../../../src/modules/apis/review/review.controller.ts"],"sourcesContent":["// NestJS\r\nimport { Controller, Delete, Get, HttpCode, Param, ParseIntPipe, Query, UseGuards } from '@nestjs/common';\r\n\r\n// Decorators\r\nimport { Serialize } from '@decorators/serialize.decorator';\r\n\r\n// Swagger\r\nimport { ApiDescriptor } from '@decorators/api-descriptor.decorator';\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n// Pipes\r\nimport { ParseJsonPipe } from '@pipes/parse-json.pipe';\r\nimport { UnionTypeValidationPipe } from '@pipes/union-type-validation.pipe';\r\n\r\n// Guards\r\nimport { AdminGuard } from '@guards/admin.guard';\r\nimport { JwtAccessAuthGuard } from '@guards/jwt-access-auth.guard';\r\n\r\n// Services\r\nimport { ReviewService } from '@apis/review/review.service';\r\n\r\n// Query DTOs\r\nimport { ReviewQueryDto } from '@apis/review/dtos/review-search-query.dto';\r\n\r\n// Serializer DTOs\r\n// import { ReviewDto } from '@apis/review/serializer-dtos/review.dto';\r\nimport { PaginatedReviewsDataDto } from '@apis/review/serializer-dtos/paginated-reviews-data.dto';\r\n\r\n// Swagger descriptors\r\nimport { deleteReviewDescriptor } from '@apis/review/api-descriptors/delete-review.descriptor';\r\nimport { getReviewsPaginatedDescriptor } from '@apis/review/api-descriptors/get-reviews-paginated.descriptor';\r\n\r\n@ApiTags('Review')\r\n@Controller('review')\r\nexport class ReviewController {\r\n  constructor(private readonly reviewService: ReviewService) {}\r\n\r\n  @ApiDescriptor(getReviewsPaginatedDescriptor)\r\n  @Serialize(PaginatedReviewsDataDto)\r\n  @Get('paginated')\r\n  @HttpCode(200)\r\n  async getReviewsPaginated(\r\n    @Query('page', ParseIntPipe) page: number,\r\n    @Query('limit', ParseIntPipe) limit: number,\r\n    @Query('orderBy', new UnionTypeValidationPipe(['id', 'username', 'gameName', 'content', 'rating']))\r\n    orderBy: 'id' | 'username' | 'gameName' | 'content' | 'rating',\r\n    @Query('order', new UnionTypeValidationPipe(['ASC', 'DESC'])) order: 'ASC' | 'DESC',\r\n    @Query('searchQuery', new ParseJsonPipe(ReviewQueryDto, { optional: true, validate: true }))\r\n    searchQuery: ReviewQueryDto = {},\r\n  ) {\r\n    const result = await this.reviewService.getReviewsPaginated(page, limit, orderBy, order, searchQuery);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(deleteReviewDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Delete(':id')\r\n  @HttpCode(200)\r\n  async deleteReview(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.reviewService.deleteReview(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n}\r\n"],"names":["ReviewController","constructor","reviewService","getReviewsPaginated","page","limit","orderBy","order","searchQuery","result","deleteReview","id","UnionTypeValidationPipe","ParseJsonPipe","ReviewQueryDto","optional","validate"],"mappings":"AAAA,SAAS;;;;;+BAkCIA;;;eAAAA;;;wBAjC4E;oCAG/D;wCAGI;yBACN;+BAGM;yCACU;4BAGb;oCACQ;+BAGL;sCAGC;yCAIS;wCAGD;+CACO;;;;;;;;;;;;;;;AAIvC,IAAA,AAAMA,mBAAN,MAAMA;IACXC,YAAY,AAAiBC,aAA4B,CAAE;aAA9BA,gBAAAA;IAA+B;IAE5D,MAIMC,oBACJ,AAA6BC,IAAY,EACzC,AAA8BC,KAAa,EAC3C,AACAC,OAA8D,EAC9D,AAA8DC,KAAqB,EACnF,AACAC,cAA8B,CAAC,CAAC,EAChC;QACA,MAAMC,SAAS,MAAM,IAAI,CAACP,aAAa,CAACC,mBAAmB,CAACC,MAAMC,OAAOC,SAASC,OAAOC;QAEzF,oBAAoB;QACpB,OAAOC;IACT;IAEA,MAIMC,aAAa,AAA2BC,EAAU,EAAE;QACxD,MAAMF,SAAS,MAAM,IAAI,CAACP,aAAa,CAACQ,YAAY,CAACC;QAErD,oBAAoB;QACpB,OAAOF;IACT;AACF;;;;;;;;mDAtB0BG,gDAAuB,CAAC;QAAC;QAAM;QAAY;QAAY;QAAW;KAAS;iDAE7EA,gDAAuB,CAAC;QAAC;QAAO;KAAO;uDACjCC,4BAAa,CAACC,oCAAc,EAAE;QAAEC,UAAU;QAAMC,UAAU;IAAK"}