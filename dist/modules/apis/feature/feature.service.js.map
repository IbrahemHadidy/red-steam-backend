{"version":3,"sources":["../../../../src/modules/apis/feature/feature.service.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable, Logger } from '@nestjs/common';\r\n\r\n// Services\r\nimport { GamesFeaturesService } from '@repositories/sql/games-features/games-features.service';\r\n\r\n// Types\r\nimport type { GameFeature } from '@repositories/sql/games-features/game-feature.entity';\r\n\r\n@Injectable()\r\nexport class FeatureService {\r\n  constructor(\r\n    private readonly logger: Logger,\r\n    private readonly feature: GamesFeaturesService,\r\n  ) {}\r\n\r\n  /**\r\n   * Create a new feature\r\n   * @param data - The name and website of the feature\r\n   * @returns A success message\r\n   */\r\n  public async createFeature(data: { name: string; icon: string }): Promise<{ message: string }> {\r\n    const { name, icon } = data;\r\n\r\n    // Convert icon from base64 to buffer\r\n    const iconAsBuffer = Buffer.from(icon, 'base64');\r\n\r\n    // Create the feature\r\n    this.logger.log(`Creating feature with name ${name}`);\r\n    await this.feature.create({ name, icon: iconAsBuffer });\r\n\r\n    // Send a success response\r\n    return { message: 'Feature created successfully' };\r\n  }\r\n\r\n  /**\r\n   * Get Feature by ID\r\n   * @param id\r\n   * @returns The feature\r\n   */\r\n  public async getFeature(id: number) {\r\n    this.logger.log(`Retrieving feature with ID ${id}`);\r\n\r\n    // Get feature and return it if it exists\r\n    return this.feature.getById(id);\r\n  }\r\n\r\n  /**\r\n   * Get features by IDs\r\n   * @param ids\r\n   * @returns An array of features\r\n   */\r\n  public async getFeatures(ids: number[]) {\r\n    this.logger.log(`Retrieving features with IDs ${ids}`);\r\n\r\n    // Get features and return them if they exist\r\n    return this.feature.getByIds(ids);\r\n  }\r\n\r\n  /**\r\n   * Get all features\r\n   * @returns An array of all features\r\n   */\r\n  public async getAllFeatures() {\r\n    this.logger.log(`Retrieving all features`);\r\n\r\n    // Get all features and return them\r\n    return this.feature.getAll('id', 'ASC');\r\n  }\r\n\r\n  /**\r\n   * Get paginated features\r\n   * @param page - The current page number\r\n   * @param limit - The number of items per page\r\n   * @param orderBy - The column to order by\r\n   * @param order - The order direction\r\n   * @param searchQuery - The search query\r\n   * @returns An object containing the paginated features and the total number of features\r\n   */\r\n  public async getFeaturesPaginated(\r\n    page: number,\r\n    limit: number,\r\n    orderBy: 'id' | 'name',\r\n    order: 'ASC' | 'DESC',\r\n    searchQuery: { name?: string },\r\n  ): Promise<{ items: GameFeature[]; total: number; totalPages: number }> {\r\n    this.logger.log(\r\n      `Retrieving features, page: ${page}, limit: ${limit}, order by: ${orderBy}, order: ${order}, search query: ${JSON.stringify(searchQuery)}`,\r\n    );\r\n\r\n    // Get features paginated and return them if they exist\r\n    return await this.feature.getFeaturesPaginated(page, limit, orderBy, order, searchQuery);\r\n  }\r\n\r\n  /**\r\n   * Update feature\r\n   * @param id - The ID of the feature\r\n   * @param data - The new data for the feature\r\n   * @returns A success message\r\n   */\r\n  public async updateFeature(id: number, data: { name?: string; icon?: string }): Promise<{ message: string }> {\r\n    const { name, icon } = data;\r\n    this.logger.log(`Updating feature with ID ${id}`);\r\n\r\n    // Convert icon from base64 to buffer\r\n    const iconAsBuffer = Buffer.from(icon, 'base64');\r\n\r\n    // Update the feature\r\n    await this.feature.update(id, { name, icon: iconAsBuffer });\r\n\r\n    // Send a success response\r\n    return { message: 'Feature updated successfully' };\r\n  }\r\n\r\n  /**\r\n   * Delete feature\r\n   * @param id - The ID of the feature\r\n   * @returns A message indicating the success of the delete\r\n   */\r\n  public async deleteFeature(id: number): Promise<{ message: string }> {\r\n    this.logger.log(`Deleting feature with ID ${id}`);\r\n\r\n    // Delete the feature\r\n    await this.feature.remove(id);\r\n\r\n    // Send a success response\r\n    return { message: 'Feature deleted successfully' };\r\n  }\r\n}\r\n"],"names":["FeatureService","constructor","logger","feature","createFeature","data","name","icon","iconAsBuffer","Buffer","from","log","create","message","getFeature","id","getById","getFeatures","ids","getByIds","getAllFeatures","getAll","getFeaturesPaginated","page","limit","orderBy","order","searchQuery","JSON","stringify","updateFeature","update","deleteFeature","remove"],"mappings":"AAAA,SAAS;;;;;+BAUIA;;;eAAAA;;;wBATsB;sCAGE;;;;;;;;;;AAM9B,IAAA,AAAMA,iBAAN,MAAMA;IACXC,YACE,AAAiBC,MAAc,EAC/B,AAAiBC,OAA6B,CAC9C;aAFiBD,SAAAA;aACAC,UAAAA;IAChB;IAEH;;;;GAIC,GACD,MAAaC,cAAcC,IAAoC,EAAgC;QAC7F,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGF;QAEvB,qCAAqC;QACrC,MAAMG,eAAeC,OAAOC,IAAI,CAACH,MAAM;QAEvC,qBAAqB;QACrB,IAAI,CAACL,MAAM,CAACS,GAAG,CAAC,CAAC,2BAA2B,EAAEL,MAAM;QACpD,MAAM,IAAI,CAACH,OAAO,CAACS,MAAM,CAAC;YAAEN;YAAMC,MAAMC;QAAa;QAErD,0BAA0B;QAC1B,OAAO;YAAEK,SAAS;QAA+B;IACnD;IAEA;;;;GAIC,GACD,MAAaC,WAAWC,EAAU,EAAE;QAClC,IAAI,CAACb,MAAM,CAACS,GAAG,CAAC,CAAC,2BAA2B,EAAEI,IAAI;QAElD,yCAAyC;QACzC,OAAO,IAAI,CAACZ,OAAO,CAACa,OAAO,CAACD;IAC9B;IAEA;;;;GAIC,GACD,MAAaE,YAAYC,GAAa,EAAE;QACtC,IAAI,CAAChB,MAAM,CAACS,GAAG,CAAC,CAAC,6BAA6B,EAAEO,KAAK;QAErD,6CAA6C;QAC7C,OAAO,IAAI,CAACf,OAAO,CAACgB,QAAQ,CAACD;IAC/B;IAEA;;;GAGC,GACD,MAAaE,iBAAiB;QAC5B,IAAI,CAAClB,MAAM,CAACS,GAAG,CAAC,CAAC,uBAAuB,CAAC;QAEzC,mCAAmC;QACnC,OAAO,IAAI,CAACR,OAAO,CAACkB,MAAM,CAAC,MAAM;IACnC;IAEA;;;;;;;;GAQC,GACD,MAAaC,qBACXC,IAAY,EACZC,KAAa,EACbC,OAAsB,EACtBC,KAAqB,EACrBC,WAA8B,EACwC;QACtE,IAAI,CAACzB,MAAM,CAACS,GAAG,CACb,CAAC,2BAA2B,EAAEY,KAAK,SAAS,EAAEC,MAAM,YAAY,EAAEC,QAAQ,SAAS,EAAEC,MAAM,gBAAgB,EAAEE,KAAKC,SAAS,CAACF,cAAc;QAG5I,uDAAuD;QACvD,OAAO,MAAM,IAAI,CAACxB,OAAO,CAACmB,oBAAoB,CAACC,MAAMC,OAAOC,SAASC,OAAOC;IAC9E;IAEA;;;;;GAKC,GACD,MAAaG,cAAcf,EAAU,EAAEV,IAAsC,EAAgC;QAC3G,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAE,GAAGF;QACvB,IAAI,CAACH,MAAM,CAACS,GAAG,CAAC,CAAC,yBAAyB,EAAEI,IAAI;QAEhD,qCAAqC;QACrC,MAAMP,eAAeC,OAAOC,IAAI,CAACH,MAAM;QAEvC,qBAAqB;QACrB,MAAM,IAAI,CAACJ,OAAO,CAAC4B,MAAM,CAAChB,IAAI;YAAET;YAAMC,MAAMC;QAAa;QAEzD,0BAA0B;QAC1B,OAAO;YAAEK,SAAS;QAA+B;IACnD;IAEA;;;;GAIC,GACD,MAAamB,cAAcjB,EAAU,EAAgC;QACnE,IAAI,CAACb,MAAM,CAACS,GAAG,CAAC,CAAC,yBAAyB,EAAEI,IAAI;QAEhD,qBAAqB;QACrB,MAAM,IAAI,CAACZ,OAAO,CAAC8B,MAAM,CAAClB;QAE1B,0BAA0B;QAC1B,OAAO;YAAEF,SAAS;QAA+B;IACnD;AACF"}