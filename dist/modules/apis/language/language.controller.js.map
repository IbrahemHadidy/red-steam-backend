{"version":3,"sources":["../../../../src/modules/apis/language/language.controller.ts"],"sourcesContent":["// NestJS\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  HttpCode,\r\n  Param,\r\n  ParseArrayPipe,\r\n  ParseIntPipe,\r\n  Post,\r\n  Put,\r\n  Query,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\n\r\n// Decorators\r\nimport { Serialize } from '@decorators/serialize.decorator';\r\n\r\n// Swagger\r\nimport { ApiDescriptor } from '@decorators/api-descriptor.decorator';\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n// Pipes\r\nimport { ParseJsonPipe } from '@pipes/parse-json.pipe';\r\nimport { UnionTypeValidationPipe } from '@pipes/union-type-validation.pipe';\r\n\r\n// Guards\r\nimport { AdminGuard } from '@guards/admin.guard';\r\nimport { JwtAccessAuthGuard } from '@guards/jwt-access-auth.guard';\r\n\r\n// Services\r\nimport { LanguageService } from '@apis/language/language.service';\r\n\r\n// Body DTOs\r\nimport { CreateLanguageDto } from '@apis/language/dtos/create-language.dto';\r\nimport { UpdateLanguageDto } from '@apis/language/dtos/update-language.dto';\r\n\r\n// Query DTOs\r\nimport { LanguageQueryDto } from '@apis/language/dtos/language-search-query.dto';\r\n\r\n// Serializer DTOs\r\nimport { LanguageDto } from '@apis/language/serializer-dtos/language.dto';\r\nimport { PaginatedLanguagesDataDto } from '@apis/language/serializer-dtos/paginated-languages-data.dto';\r\n\r\n// Swagger descriptors\r\nimport { createLanguageDescriptor } from '@apis/language/api-descriptors/create-language.descriptor';\r\nimport { deleteLanguageDescriptor } from '@apis/language/api-descriptors/delete-language.descriptor';\r\nimport { getAllLanguagesDescriptor } from '@apis/language/api-descriptors/get-all-languages.descriptor';\r\nimport { getLanguageDescriptor } from '@apis/language/api-descriptors/get-language.descriptor';\r\nimport { getLanguagesPaginatedDescriptor } from '@apis/language/api-descriptors/get-languages-paginated.descriptor';\r\nimport { getLanguagesDescriptor } from '@apis/language/api-descriptors/get-languages.descriptor';\r\nimport { updateLanguageDescriptor } from '@apis/language/api-descriptors/update-language.descriptor';\r\n\r\n@ApiTags('Language')\r\n@Controller('language')\r\nexport class LanguageController {\r\n  constructor(private readonly languageService: LanguageService) {}\r\n\r\n  @ApiDescriptor(createLanguageDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Post()\r\n  @HttpCode(201)\r\n  async createLanguage(@Body() body: CreateLanguageDto) {\r\n    const result = await this.languageService.createLanguage(body);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getLanguageDescriptor)\r\n  @Serialize(LanguageDto)\r\n  @Get(':id')\r\n  @HttpCode(200)\r\n  async getLanguage(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.languageService.getLanguage(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getLanguagesDescriptor)\r\n  @Serialize(LanguageDto)\r\n  @Get('bulk/:ids')\r\n  @HttpCode(200)\r\n  async getLanguages(@Param('ids', new ParseArrayPipe({ items: Number })) ids: number[]) {\r\n    const result = await this.languageService.getLanguages(ids);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getAllLanguagesDescriptor)\r\n  @Serialize(LanguageDto)\r\n  @Get()\r\n  @HttpCode(200)\r\n  async getAllLanguages() {\r\n    const result = await this.languageService.getAllLanguages();\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getLanguagesPaginatedDescriptor)\r\n  @Serialize(PaginatedLanguagesDataDto)\r\n  @Get('paginated')\r\n  @HttpCode(200)\r\n  async getLanguagesPaginated(\r\n    @Query('page', ParseIntPipe) page: number,\r\n    @Query('limit', ParseIntPipe) limit: number,\r\n    @Query('orderBy', new UnionTypeValidationPipe(['id', 'name'])) orderBy: 'id' | 'name',\r\n    @Query('order', new UnionTypeValidationPipe(['ASC', 'DESC'])) order: 'ASC' | 'DESC',\r\n    @Query('searchQuery', new ParseJsonPipe(LanguageQueryDto, { optional: true, validate: true }))\r\n    searchQuery: LanguageQueryDto = {},\r\n  ) {\r\n    const result = await this.languageService.getLanguagesPaginated(page, limit, orderBy, order, searchQuery);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(updateLanguageDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Put(':id')\r\n  @HttpCode(200)\r\n  async updateLanguage(@Param('id', ParseIntPipe) id: number, @Body() body: UpdateLanguageDto) {\r\n    const result = await this.languageService.updateLanguage(id, body);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(deleteLanguageDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Delete(':id')\r\n  @HttpCode(200)\r\n  async deleteLanguage(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.languageService.deleteLanguage(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n}\r\n"],"names":["LanguageController","constructor","languageService","createLanguage","body","result","getLanguage","id","getLanguages","ids","getAllLanguages","getLanguagesPaginated","page","limit","orderBy","order","searchQuery","updateLanguage","deleteLanguage","ParseArrayPipe","items","Number","UnionTypeValidationPipe","ParseJsonPipe","LanguageQueryDto","optional","validate"],"mappings":"AAAA,SAAS;;;;;+BAwDIA;;;eAAAA;;;wBA1CN;oCAGmB;wCAGI;yBACN;+BAGM;yCACU;4BAGb;oCACQ;iCAGH;mCAGE;mCACA;wCAGD;6BAGL;2CACc;0CAGD;0CACA;2CACC;uCACJ;iDACU;wCACT;0CACE;;;;;;;;;;;;;;;AAIlC,IAAA,AAAMA,qBAAN,MAAMA;IACXC,YAAY,AAAiBC,eAAgC,CAAE;aAAlCA,kBAAAA;IAAmC;IAEhE,MAIMC,eAAe,AAAQC,IAAuB,EAAE;QACpD,MAAMC,SAAS,MAAM,IAAI,CAACH,eAAe,CAACC,cAAc,CAACC;QAEzD,oBAAoB;QACpB,OAAOC;IACT;IAEA,MAIMC,YAAY,AAA2BC,EAAU,EAAE;QACvD,MAAMF,SAAS,MAAM,IAAI,CAACH,eAAe,CAACI,WAAW,CAACC;QAEtD,oBAAoB;QACpB,OAAOF;IACT;IAEA,MAIMG,aAAa,AAAqDC,GAAa,EAAE;QACrF,MAAMJ,SAAS,MAAM,IAAI,CAACH,eAAe,CAACM,YAAY,CAACC;QAEvD,oBAAoB;QACpB,OAAOJ;IACT;IAEA,MAIMK,kBAAkB;QACtB,MAAML,SAAS,MAAM,IAAI,CAACH,eAAe,CAACQ,eAAe;QAEzD,oBAAoB;QACpB,OAAOL;IACT;IAEA,MAIMM,sBACJ,AAA6BC,IAAY,EACzC,AAA8BC,KAAa,EAC3C,AAA+DC,OAAsB,EACrF,AAA8DC,KAAqB,EACnF,AACAC,cAAgC,CAAC,CAAC,EAClC;QACA,MAAMX,SAAS,MAAM,IAAI,CAACH,eAAe,CAACS,qBAAqB,CAACC,MAAMC,OAAOC,SAASC,OAAOC;QAE7F,oBAAoB;QACpB,OAAOX;IACT;IAEA,MAIMY,eAAe,AAA2BV,EAAU,EAAE,AAAQH,IAAuB,EAAE;QAC3F,MAAMC,SAAS,MAAM,IAAI,CAACH,eAAe,CAACe,cAAc,CAACV,IAAIH;QAE7D,oBAAoB;QACpB,OAAOC;IACT;IAEA,MAIMa,eAAe,AAA2BX,EAAU,EAAE;QAC1D,MAAMF,SAAS,MAAM,IAAI,CAACH,eAAe,CAACgB,cAAc,CAACX;QAEzD,oBAAoB;QACpB,OAAOF;IACT;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CAzDuCc,sBAAc,CAAC;QAAEC,OAAOC;IAAO;;;;;;;;;;;;;;;;;;;;;;;mDAyB5CC,gDAAuB,CAAC;QAAC;QAAM;KAAO;iDACxCA,gDAAuB,CAAC;QAAC;QAAO;KAAO;uDACjCC,4BAAa,CAACC,wCAAgB,EAAE;QAAEC,UAAU;QAAMC,UAAU;IAAK"}