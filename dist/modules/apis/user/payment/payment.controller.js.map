{"version":3,"sources":["../../../../../src/modules/apis/user/payment/payment.controller.ts"],"sourcesContent":["// NestJS\r\nimport { Body, Controller, HttpCode, Post, Req, UseGuards } from '@nestjs/common';\r\n\r\n// Fastify\r\nimport { FastifyRequest as Request } from 'fastify';\r\n\r\n// Swagger\r\nimport { ApiDescriptor } from '@decorators/api-descriptor.decorator';\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n// Guards\r\nimport { JwtAccessAuthGuard } from '@guards/jwt-access-auth.guard';\r\nimport { VerifiedUserGuard } from '@guards/verified-user.guard';\r\n\r\n// Services\r\nimport { PaymentService } from '@apis/user/payment/payment.service';\r\n\r\n// Body DTOs\r\nimport { CaptureOrderDto } from '@apis/user/payment/dtos/capture-order.dto';\r\nimport { CreateOrderDto } from '@apis/user/payment/dtos/create-order.dto';\r\n\r\n// Swagger descriptors\r\nimport { captureOrderDescriptor } from '@apis/user/payment/api-descriptors/capture-order.descriptor';\r\nimport { createOrderDescriptor } from '@apis/user/payment/api-descriptors/create-order.descriptor';\r\n\r\n@ApiTags('User Payment')\r\n@Controller('user/payment')\r\nexport class PaymentController {\r\n  constructor(private readonly paymentService: PaymentService) {}\r\n\r\n  @ApiDescriptor(createOrderDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, VerifiedUserGuard)\r\n  @Post('order/create')\r\n  @HttpCode(201)\r\n  async createOrder(@Req() request: Request, @Body() bodyData: CreateOrderDto) {\r\n    const data: CreateOrderDto & { userId: string } = {\r\n      ...bodyData,\r\n      userId: request['userId'],\r\n    };\r\n    const result = await this.paymentService.createOrder(data);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(captureOrderDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, VerifiedUserGuard)\r\n  @Post('order/capture')\r\n  @HttpCode(200)\r\n  async captureOrder(@Req() request: Request, @Body() bodyData: CaptureOrderDto) {\r\n    const data: CaptureOrderDto & { userId: string } = {\r\n      ...bodyData,\r\n      userId: request['userId'],\r\n    };\r\n    const result = await this.paymentService.captureOrder(data);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n}\r\n"],"names":["PaymentController","constructor","paymentService","createOrder","request","bodyData","data","userId","result","captureOrder"],"mappings":"AAAA,SAAS;;;;;+BA2BIA;;;eAAAA;;;wBA1BoD;yBAGvB;wCAGZ;yBACN;oCAGW;mCACD;gCAGH;iCAGC;gCACD;wCAGQ;uCACD;;;;;;;;;;;;;;;AAI/B,IAAA,AAAMA,oBAAN,MAAMA;IACXC,YAAY,AAAiBC,cAA8B,CAAE;aAAhCA,iBAAAA;IAAiC;IAE9D,MAIMC,YAAY,AAAOC,OAAgB,EAAE,AAAQC,QAAwB,EAAE;QAC3E,MAAMC,OAA4C;YAChD,GAAGD,QAAQ;YACXE,QAAQH,OAAO,CAAC,SAAS;QAC3B;QACA,MAAMI,SAAS,MAAM,IAAI,CAACN,cAAc,CAACC,WAAW,CAACG;QAErD,oBAAoB;QACpB,OAAOE;IACT;IAEA,MAIMC,aAAa,AAAOL,OAAgB,EAAE,AAAQC,QAAyB,EAAE;QAC7E,MAAMC,OAA6C;YACjD,GAAGD,QAAQ;YACXE,QAAQH,OAAO,CAAC,SAAS;QAC3B;QACA,MAAMI,SAAS,MAAM,IAAI,CAACN,cAAc,CAACO,YAAY,CAACH;QAEtD,oBAAoB;QACpB,OAAOE;IACT;AACF"}