{"version":3,"sources":["../../../../../../src/modules/apis/user/auth/dtos/login.dto.ts"],"sourcesContent":["// Class-validator\r\nimport { IsBoolean, IsNotEmpty, IsString, IsStrongPassword } from 'class-validator';\r\n\r\n// Swagger\r\nimport { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class LoginDto {\r\n  @ApiProperty({\r\n    description: 'The unique identifier for the user, can be either username or email.',\r\n    example: 'enter username or email here',\r\n    required: true,\r\n  })\r\n  @IsNotEmpty({ message: 'Identifier is required.' })\r\n  @IsString({ message: 'Identifier must be a string.' })\r\n  readonly identifier: string;\r\n\r\n  @ApiProperty({ description: 'The password of the user account.', example: 'enter password here', required: true })\r\n  @IsNotEmpty({ message: 'Password is required.' })\r\n  @IsStrongPassword(\r\n    { minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1 },\r\n    { message: 'Invalid password.' },\r\n  )\r\n  readonly password: string;\r\n\r\n  @ApiProperty({ description: 'Whether to remember the user on this device.', required: true })\r\n  @IsNotEmpty({ message: 'Remember me is required.' })\r\n  @IsBoolean()\r\n  readonly rememberMe: boolean;\r\n}\r\n"],"names":["LoginDto","description","example","required","message","minLength","minLowercase","minUppercase","minNumbers","minSymbols"],"mappings":"AAAA,kBAAkB;;;;;+BAMLA;;;eAAAA;;;gCALqD;yBAGtC;;;;;;;;;;AAErB,IAAA,AAAMA,WAAN,MAAMA;AAsBb;;;QApBIC,aAAa;QACbC,SAAS;QACTC,UAAU;;;QAEEC,SAAS;;;QACXA,SAAS;;;;;;QAGNH,aAAa;QAAqCC,SAAS;QAAuBC,UAAU;;;QAC7FC,SAAS;;;QAEnBC,WAAW;QAAGC,cAAc;QAAGC,cAAc;QAAGC,YAAY;QAAGC,YAAY;;QAC3EL,SAAS;;;;;;QAIEH,aAAa;QAAgDE,UAAU;;;QACxEC,SAAS"}