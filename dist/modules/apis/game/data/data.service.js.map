{"version":3,"sources":["../../../../../src/modules/apis/game/data/data.service.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable, Logger } from '@nestjs/common';\r\n\r\n// Services\r\nimport { ReviewsService } from '@/modules/repositories/sql/reviews/reviews.service';\r\nimport { GamesService } from '@repositories/sql/games/games.service';\r\nimport { SearchService } from '@repositories/sql/games/search.service';\r\n\r\n// Types\r\nimport type { Game } from '@repositories/sql/games/game.entity';\r\nimport type { Review } from '@repositories/sql/reviews/review.entity';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(\r\n    private readonly logger: Logger,\r\n    private readonly game: GamesService,\r\n    private readonly search: SearchService,\r\n    private readonly review: ReviewsService,\r\n  ) {}\r\n\r\n  /**\r\n   * Get games by partial name (for mini search)\r\n   * @param data An object containing the name of the game\r\n   * @returns An array of games\r\n   */\r\n  public async getByPartialName(partialName: string): Promise<Game[]> {\r\n    this.logger.log(`Finding games by partial name`);\r\n\r\n    // Find games by partial name\r\n    const games = await this.search.getByPartialName(partialName);\r\n    this.logger.log(`Found ${games.length} games`);\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games by parameters\r\n   * @param searchData An object containing the search data\r\n   * @param pagination An object containing the pagination data\r\n   * @returns An array of games\r\n   */\r\n  public async getByParameters(\r\n    searchData: {\r\n      sort?: 'relevance' | 'name' | 'lowestPrice' | 'highestPrice' | 'releaseDate' | 'reviews' | 'totalSales';\r\n      partialName?: string;\r\n      maxPrice?: string;\r\n      tags?: number[];\r\n      excludeTags?: number[];\r\n      paid?: boolean;\r\n      offers?: boolean;\r\n      platforms?: ('win' | 'mac')[];\r\n      publishers?: number[];\r\n      developers?: number[];\r\n      features?: number[];\r\n      languages?: number[];\r\n      featured?: boolean;\r\n      excludeMature?: boolean;\r\n      excludedGames?: number[];\r\n      upcomingMode?: 'onlyUpcoming' | 'exclude';\r\n    },\r\n    pagination: { page: number; limit: number },\r\n  ): Promise<Game[]> {\r\n    this.logger.log(`Finding games by criteria`);\r\n\r\n    // Prepare search data\r\n    const data = {\r\n      sort: searchData.sort,\r\n      partialName: searchData.partialName,\r\n      maxPrice: searchData.maxPrice && searchData.maxPrice,\r\n      tags: searchData.tags && searchData.tags.length > 0 && searchData.tags.map((tag) => tag),\r\n      excludeTags:\r\n        searchData.excludeTags && searchData.excludeTags.length > 0 && searchData.excludeTags.map((tag) => tag),\r\n      paid: searchData.paid !== undefined ? searchData.paid : undefined,\r\n      offers: searchData.offers !== undefined ? searchData.offers : undefined,\r\n      platforms: searchData.platforms && searchData.platforms.length > 0 && searchData.platforms,\r\n      publishers:\r\n        searchData.publishers &&\r\n        searchData.publishers.length > 0 &&\r\n        searchData.publishers.map((publisher) => publisher),\r\n      developers:\r\n        searchData.developers &&\r\n        searchData.developers.length > 0 &&\r\n        searchData.developers.map((developer) => developer),\r\n      features: searchData.features && searchData.features.length > 0 && searchData.features.map((feature) => feature),\r\n      languages:\r\n        searchData.languages && searchData.languages.length > 0 && searchData.languages.map((language) => language),\r\n      featured: searchData.featured !== undefined ? searchData.featured : undefined,\r\n      excludeMature: searchData.excludeMature !== undefined ? searchData.excludeMature : undefined,\r\n      excludedGames:\r\n        searchData.excludedGames && searchData.excludedGames.length > 0 && searchData.excludedGames.map((game) => game),\r\n      upcomingMode: searchData.upcomingMode,\r\n    };\r\n\r\n    // Find games by parameters\r\n    const games = await this.search.getByParameters(data, {\r\n      page: pagination.page,\r\n      limit: pagination.limit,\r\n    });\r\n    this.logger.log(`Found ${games.length} games`);\r\n\r\n    // Return found games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get featured games\r\n   * @param limit The maximum number of games to return\r\n   * @returns An array of featured games\r\n   */\r\n  public async getFeaturedGames(excludedGames: number[], limit: number): Promise<Game[]> {\r\n    this.logger.log(`Finding featured games`);\r\n\r\n    // Find featured games\r\n    const games = await this.search.getByParameters(\r\n      { featured: true, excludedGames: excludedGames.length > 0 ? excludedGames : undefined, sort: 'releaseDate' },\r\n      { limit: limit, page: 0 },\r\n    );\r\n    this.logger.log(`Found ${games.length} featured games`);\r\n\r\n    // Return featured games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games by tags\r\n   * @param tags An array of tag IDs\r\n   * @param limit The maximum number of games to return\r\n   * @returns An array of games\r\n   */\r\n  public async getByUserTags(tags?: number[], excludedGames?: number[], limit?: number): Promise<Game[]> {\r\n    this.logger.log(`Finding games by tags`);\r\n\r\n    // If no tags are provided, return an empty array\r\n    if (!tags || tags.length === 0) return [];\r\n\r\n    // Find games by tags\r\n    const games = await this.search.getByUserTags(tags, excludedGames.length > 0 ? excludedGames : undefined, limit);\r\n    this.logger.log(`Found ${games.length} games`);\r\n\r\n    // Return user games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get game by ID\r\n   * @param id The ID of the game\r\n   * @returns The game\r\n   */\r\n  public async getById(id: number): Promise<Game> {\r\n    this.logger.log(`Finding game with ID: ${id}`);\r\n\r\n    // Find game by ID\r\n    const game = await this.game.getById(id);\r\n\r\n    // Return game\r\n    return game;\r\n  }\r\n\r\n  /**\r\n   * Get games by IDs\r\n   * @param ids The IDs of the games\r\n   * @returns An array of games\r\n   */\r\n  public async getByIds(ids?: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with IDs: ${ids}`);\r\n\r\n    // Find games by IDs\r\n    const games = await this.game.getByIds(ids ? ids.map((id) => id) : []);\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games with offers\r\n   * @returns An array of games\r\n   */\r\n  public async getByOffers(excludedGames: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with offers`);\r\n\r\n    // Find games with offers\r\n    const games = await this.search.getByParameters(\r\n      { offers: true, excludedGames: excludedGames.length > 0 ? excludedGames : undefined, sort: 'relevance' },\r\n      { limit: 24, page: 0 },\r\n    );\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games with new releases\r\n   * @returns An array of games\r\n   */\r\n  public async getByNewest(excludedGames: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with newest`);\r\n\r\n    // Find games with new releases\r\n    const games = await this.search.getByParameters(\r\n      {\r\n        upcomingMode: 'exclude',\r\n        excludedGames: excludedGames.length > 0 ? excludedGames : undefined,\r\n        sort: 'releaseDate',\r\n      },\r\n      { limit: 10, page: 0 },\r\n    );\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games with top sales\r\n   * @returns An array of games\r\n   */\r\n  public async getByTopSales(excludedGames: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with top sales`);\r\n\r\n    // Find games with top sales\r\n    const games = await this.search.getByParameters(\r\n      { sort: 'totalSales', excludedGames: excludedGames.length > 0 ? excludedGames : undefined },\r\n      { limit: 10, page: 0 },\r\n    );\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get games with specials\r\n   * @returns An array of games\r\n   */\r\n  public async getBySpecials(excludedGames: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with specials`);\r\n\r\n    // Find games with specials\r\n    const games = await this.search.getByParameters(\r\n      { featured: true, excludedGames: excludedGames.length > 0 ? excludedGames : undefined, sort: 'relevance' },\r\n      { limit: 10, page: 0 },\r\n    );\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get upcoming games\r\n   * @returns An array of games\r\n   */\r\n  public async getByUpcoming(excludedGames: number[]): Promise<Game[]> {\r\n    this.logger.log(`Finding games with upcoming`);\r\n\r\n    // Find games with upcoming\r\n    const games = await this.search.getByParameters(\r\n      {\r\n        upcomingMode: 'onlyUpcoming',\r\n        excludedGames: excludedGames.length > 0 ? excludedGames : undefined,\r\n        sort: 'releaseDate',\r\n      },\r\n      { limit: 10, page: 0 },\r\n    );\r\n\r\n    // Return games\r\n    return games;\r\n  }\r\n\r\n  /**\r\n   * Get reviews by game ID\r\n   * @param id The ID of the game\r\n   * @param pagination An object containing the pagination data\r\n   * @returns An array of reviews\r\n   */\r\n  public async getGameReviews(\r\n    id: number,\r\n    filter: 'positive' | 'negative' | 'all',\r\n    sort: 'newest' | 'oldest',\r\n    pagination: { offset: number; limit: number },\r\n  ): Promise<Review[]> {\r\n    this.logger.log(`Finding reviews for game with ID: ${id}`);\r\n\r\n    // Find reviews by game ID\r\n    const reviews = await this.review.getByGameId(id, filter, sort, pagination);\r\n\r\n    // Return reviews\r\n    return reviews;\r\n  }\r\n}\r\n"],"names":["DataService","constructor","logger","game","search","review","getByPartialName","partialName","log","games","length","getByParameters","searchData","pagination","data","sort","maxPrice","tags","map","tag","excludeTags","paid","undefined","offers","platforms","publishers","publisher","developers","developer","features","feature","languages","language","featured","excludeMature","excludedGames","upcomingMode","page","limit","getFeaturedGames","getByUserTags","getById","id","getByIds","ids","getByOffers","getByNewest","getByTopSales","getBySpecials","getByUpcoming","getGameReviews","filter","reviews","getByGameId"],"mappings":"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"}