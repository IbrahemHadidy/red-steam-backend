{"version":3,"sources":["../../../../../src/modules/apis/game/admin/admin.controller.ts"],"sourcesContent":["// NestJS\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  HttpCode,\r\n  Param,\r\n  ParseIntPipe,\r\n  Patch,\r\n  Post,\r\n  UploadedFiles,\r\n  UseGuards,\r\n  UseInterceptors,\r\n} from '@nestjs/common';\r\n\r\n// Multer\r\nimport { AnyFilesInterceptor } from '@nest-lab/fastify-multer';\r\n\r\n// Swagger\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n// Decorators\r\nimport { ApiDescriptor } from '@decorators/api-descriptor.decorator';\r\n\r\n// Pipes\r\nimport { ParseJsonPipe } from '@pipes/parse-json.pipe';\r\n\r\n// Guards\r\nimport { AdminGuard } from '@guards/admin.guard';\r\nimport { JwtAccessAuthGuard } from '@guards/jwt-access-auth.guard';\r\n\r\n// Services\r\nimport { AdminService } from '@apis/game/admin/admin.service';\r\n\r\n// Body DTOs\r\nimport { CreateGameDto } from '@apis/game/admin/dtos/create-game.dto';\r\nimport { UpdateGameDto } from '@apis/game/admin/dtos/update-game.dto';\r\n\r\n// importing swagger descriptors\r\nimport { createGameDescriptor } from '@apis/game/admin/api-descriptors/create-game.descriptor';\r\nimport { updateGameDescriptor } from '@apis/game/admin/api-descriptors/update-game.descriptor';\r\nimport { deleteGameDescriptor } from '@apis/game/admin/api-descriptors/delete-game.descriptor';\r\n\r\n// Types\r\nimport type { File } from '@nest-lab/fastify-multer';\r\nimport type { CreateData, UpdateData } from './admin.types';\r\n\r\n@ApiTags('Game Admin')\r\n@Controller('game/admin')\r\nexport class AdminController {\r\n  constructor(private readonly adminService: AdminService) {}\r\n\r\n  @ApiDescriptor(createGameDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @UseInterceptors(AnyFilesInterceptor())\r\n  @Post()\r\n  @HttpCode(201)\r\n  async create(\r\n    @UploadedFiles() media: File[],\r\n    @Body('body', new ParseJsonPipe(CreateGameDto, { validate: true, excludeExtraneousValues: false }))\r\n    bodyData,\r\n  ) {\r\n    // Process files and map them to the appropriate fields\r\n    const filesMap: { [fieldname: string]: File } = media.reduce((acc, file) => {\r\n      acc[file.fieldname] = file;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Type the body after validating using ParseJsonPipe to prevent validating the stringified body (which will fail)\r\n    const body: CreateGameDto = bodyData;\r\n\r\n    // Map the files to the DTO structure\r\n    const data: CreateData = {\r\n      ...body,\r\n      thumbnailEntries: {\r\n        mainImage: filesMap['mainImage'],\r\n        backgroundImage: filesMap['backgroundImage'],\r\n        menuImg: filesMap['menuImg'],\r\n        horizontalHeaderImage: filesMap['horizontalHeaderImage'],\r\n        verticalHeaderImage: filesMap['verticalHeaderImage'],\r\n        smallHeaderImage: filesMap['smallHeaderImage'],\r\n        searchImage: filesMap['searchImage'],\r\n        tabImage: filesMap['tabImage'],\r\n      },\r\n      imageEntries: body.imageEntries.map((imageEntry) => ({\r\n        ...imageEntry,\r\n        image: filesMap[imageEntry.order.toString()],\r\n      })),\r\n      videoEntries: body.videoEntries\r\n        ? body.videoEntries.map((videoEntry) => ({\r\n            ...videoEntry,\r\n            video: filesMap[videoEntry.order.toString()],\r\n            poster: filesMap[`${videoEntry.order.toString()}-poster`],\r\n          }))\r\n        : [],\r\n    };\r\n\r\n    // Pass the constructed data object to the service\r\n    const result = await this.adminService.createGame(data);\r\n\r\n    // Return the result\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(updateGameDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @UseInterceptors(AnyFilesInterceptor())\r\n  @Patch('/:id')\r\n  @HttpCode(200)\r\n  async updateGame(\r\n    @Param('id', ParseIntPipe) id: number,\r\n    @UploadedFiles() media: File[],\r\n    @Body('body', new ParseJsonPipe(UpdateGameDto, { validate: true, excludeExtraneousValues: false }))\r\n    bodyData,\r\n  ) {\r\n    // Process files and map them to the appropriate fields\r\n    const filesMap: { [fieldname: string]: File } = media.reduce((acc, file) => {\r\n      acc[file.fieldname] = file;\r\n      return acc;\r\n    }, {});\r\n\r\n    // Type the body after validating using ParseJsonPipe to prevent validating the stringified body (which will fail)\r\n    const body: UpdateGameDto = bodyData;\r\n\r\n    // Map the files to the DTO structure\r\n    const data: UpdateData = {\r\n      ...body,\r\n      id,\r\n      changedThumbnails: {\r\n        mainImage: filesMap['mainImage'],\r\n        backgroundImage: filesMap['backgroundImage'],\r\n        menuImg: filesMap['menuImg'],\r\n        horizontalHeaderImage: filesMap['horizontalHeaderImage'],\r\n        verticalHeaderImage: filesMap['verticalHeaderImage'],\r\n        smallHeaderImage: filesMap['smallHeaderImage'],\r\n        searchImage: filesMap['searchImage'],\r\n        tabImage: filesMap['tabImage'],\r\n      },\r\n      addedScreenshots:\r\n        body.addedScreenshots &&\r\n        body.addedScreenshots.map((imageEntry) => ({\r\n          ...imageEntry,\r\n          image: filesMap[imageEntry.order.toString()],\r\n        })),\r\n      addedVideos:\r\n        body.addedVideos &&\r\n        body.addedVideos.map((videoEntry) => ({\r\n          ...videoEntry,\r\n          video: filesMap[videoEntry.order.toString()],\r\n          poster: filesMap[`${videoEntry.order.toString()}-poster`],\r\n        })),\r\n    };\r\n\r\n    // Pass the constructed data object to the service\r\n    const result = await this.adminService.updateGame(data);\r\n\r\n    // Return the result\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(deleteGameDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Delete('/:id')\r\n  @HttpCode(200)\r\n  async deleteGame(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.adminService.delete(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n}\r\n"],"names":["AdminController","constructor","adminService","create","media","bodyData","filesMap","reduce","acc","file","fieldname","body","data","thumbnailEntries","mainImage","backgroundImage","menuImg","horizontalHeaderImage","verticalHeaderImage","smallHeaderImage","searchImage","tabImage","imageEntries","map","imageEntry","image","order","toString","videoEntries","videoEntry","video","poster","result","createGame","updateGame","id","changedThumbnails","addedScreenshots","addedVideos","deleteGame","delete","ParseJsonPipe","CreateGameDto","validate","excludeExtraneousValues","UpdateGameDto"],"mappings":"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"}