{"version":3,"sources":["../../../../src/modules/apis/company/developer.controller.ts"],"sourcesContent":["// NestJS\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  HttpCode,\r\n  Param,\r\n  ParseArrayPipe,\r\n  ParseIntPipe,\r\n  Post,\r\n  Put,\r\n  Query,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\n\r\n// Decorators\r\nimport { Serialize } from '@decorators/serialize.decorator';\r\n\r\n// Swagger\r\nimport { ApiDescriptor } from '@decorators/api-descriptor.decorator';\r\nimport { ApiTags } from '@nestjs/swagger';\r\n\r\n// Pipes\r\nimport { ParseJsonPipe } from '@pipes/parse-json.pipe';\r\nimport { UnionTypeValidationPipe } from '@pipes/union-type-validation.pipe';\r\n\r\n// Guards\r\nimport { AdminGuard } from '@guards/admin.guard';\r\nimport { JwtAccessAuthGuard } from '@guards/jwt-access-auth.guard';\r\n\r\n// Services\r\nimport { CompanyService } from '@apis/company/company.service';\r\n\r\n// Body DTOs\r\nimport { CreateDeveloperDto } from '@apis/company/dtos/create-developer.dto';\r\nimport { UpdateDeveloperDto } from '@apis/company/dtos/update-developer.dto';\r\n\r\n// Query DTOs\r\nimport { DeveloperQueryDto } from '@apis/company/dtos/developer-search-query.dto';\r\n\r\n// Serializer DTOs\r\nimport { CompanyDto } from '@apis/company/serializer-dtos/company.dto';\r\nimport { PaginatedCompaniesDataDto } from '@apis/company/serializer-dtos/paginated-companies-data.dto';\r\n\r\n// Swagger descriptors\r\nimport { createDeveloperDescriptor } from '@apis/company/api-descriptors/create-developer.descriptor';\r\nimport { deleteDeveloperDescriptor } from '@apis/company/api-descriptors/delete-developer.descriptor';\r\nimport { getAllDevelopersDescriptor } from '@apis/company/api-descriptors/get-all-developers.descriptor';\r\nimport { getDeveloperDescriptor } from '@apis/company/api-descriptors/get-developer.descriptor';\r\nimport { getDevelopersPaginatedDescriptor } from '@apis/company/api-descriptors/get-developers-paginated.descriptor';\r\nimport { getDevelopersDescriptor } from '@apis/company/api-descriptors/get-developers.descriptor';\r\nimport { updateDeveloperDescriptor } from '@apis/company/api-descriptors/update-developer.descriptor';\r\n\r\n@ApiTags('Developer')\r\n@Controller('developer')\r\nexport class DeveloperController {\r\n  constructor(private readonly companyService: CompanyService) {}\r\n\r\n  @ApiDescriptor(createDeveloperDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Post()\r\n  @HttpCode(201)\r\n  async createDeveloper(@Body() body: CreateDeveloperDto) {\r\n    const result = await this.companyService.createDeveloper(body);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getDeveloperDescriptor)\r\n  @Serialize(CompanyDto)\r\n  @Get(':id')\r\n  @HttpCode(200)\r\n  async getDeveloper(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.companyService.getDeveloper(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getDevelopersDescriptor)\r\n  @Serialize(CompanyDto)\r\n  @Get('bulk/:ids')\r\n  @HttpCode(200)\r\n  async getDevelopers(@Param('ids', new ParseArrayPipe({ items: Number })) ids: number[]) {\r\n    const result = await this.companyService.getDevelopers(ids);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getAllDevelopersDescriptor)\r\n  @Serialize(CompanyDto)\r\n  @Get()\r\n  @HttpCode(200)\r\n  async getAllDevelopers() {\r\n    const result = await this.companyService.getAllDevelopers();\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(getDevelopersPaginatedDescriptor)\r\n  @Serialize(PaginatedCompaniesDataDto)\r\n  @Get('paginated')\r\n  @HttpCode(200)\r\n  async getDevelopersPaginated(\r\n    @Query('page', ParseIntPipe) page: number,\r\n    @Query('limit', ParseIntPipe) limit: number,\r\n    @Query('orderBy', new UnionTypeValidationPipe(['id', 'name', 'website']))\r\n    orderBy: 'id' | 'name' | 'website',\r\n    @Query('order', new UnionTypeValidationPipe(['ASC', 'DESC'])) order: 'ASC' | 'DESC',\r\n    @Query('searchQuery', new ParseJsonPipe(DeveloperQueryDto, { optional: true, validate: true }))\r\n    searchQuery: DeveloperQueryDto = {},\r\n  ) {\r\n    const result = await this.companyService.getDevelopersPaginated(page, limit, orderBy, order, searchQuery);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(updateDeveloperDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Put(':id')\r\n  @HttpCode(200)\r\n  async updateDeveloper(@Param('id', ParseIntPipe) id: number, @Body() body: UpdateDeveloperDto) {\r\n    const result = await this.companyService.updateDeveloper(id, body);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n\r\n  @ApiDescriptor(deleteDeveloperDescriptor)\r\n  @UseGuards(JwtAccessAuthGuard, AdminGuard)\r\n  @Delete(':id')\r\n  @HttpCode(200)\r\n  async deleteDeveloper(@Param('id', ParseIntPipe) id: number) {\r\n    const result = await this.companyService.deleteDeveloper(id);\r\n\r\n    // Send the response\r\n    return result;\r\n  }\r\n}\r\n"],"names":["DeveloperController","constructor","companyService","createDeveloper","body","result","getDeveloper","id","getDevelopers","ids","getAllDevelopers","getDevelopersPaginated","page","limit","orderBy","order","searchQuery","updateDeveloper","deleteDeveloper","ParseArrayPipe","items","Number","UnionTypeValidationPipe","ParseJsonPipe","DeveloperQueryDto","optional","validate"],"mappings":"AAAA,SAAS;;;;;+BAwDIA;;;eAAAA;;;wBA1CN;oCAGmB;wCAGI;yBACN;+BAGM;yCACU;4BAGb;oCACQ;gCAGJ;oCAGI;oCACA;yCAGD;4BAGP;2CACe;2CAGA;2CACA;4CACC;wCACJ;kDACU;yCACT;2CACE;;;;;;;;;;;;;;;AAInC,IAAA,AAAMA,sBAAN,MAAMA;IACXC,YAAY,AAAiBC,cAA8B,CAAE;aAAhCA,iBAAAA;IAAiC;IAE9D,MAIMC,gBAAgB,AAAQC,IAAwB,EAAE;QACtD,MAAMC,SAAS,MAAM,IAAI,CAACH,cAAc,CAACC,eAAe,CAACC;QAEzD,oBAAoB;QACpB,OAAOC;IACT;IAEA,MAIMC,aAAa,AAA2BC,EAAU,EAAE;QACxD,MAAMF,SAAS,MAAM,IAAI,CAACH,cAAc,CAACI,YAAY,CAACC;QAEtD,oBAAoB;QACpB,OAAOF;IACT;IAEA,MAIMG,cAAc,AAAqDC,GAAa,EAAE;QACtF,MAAMJ,SAAS,MAAM,IAAI,CAACH,cAAc,CAACM,aAAa,CAACC;QAEvD,oBAAoB;QACpB,OAAOJ;IACT;IAEA,MAIMK,mBAAmB;QACvB,MAAML,SAAS,MAAM,IAAI,CAACH,cAAc,CAACQ,gBAAgB;QAEzD,oBAAoB;QACpB,OAAOL;IACT;IAEA,MAIMM,uBACJ,AAA6BC,IAAY,EACzC,AAA8BC,KAAa,EAC3C,AACAC,OAAkC,EAClC,AAA8DC,KAAqB,EACnF,AACAC,cAAiC,CAAC,CAAC,EACnC;QACA,MAAMX,SAAS,MAAM,IAAI,CAACH,cAAc,CAACS,sBAAsB,CAACC,MAAMC,OAAOC,SAASC,OAAOC;QAE7F,oBAAoB;QACpB,OAAOX;IACT;IAEA,MAIMY,gBAAgB,AAA2BV,EAAU,EAAE,AAAQH,IAAwB,EAAE;QAC7F,MAAMC,SAAS,MAAM,IAAI,CAACH,cAAc,CAACe,eAAe,CAACV,IAAIH;QAE7D,oBAAoB;QACpB,OAAOC;IACT;IAEA,MAIMa,gBAAgB,AAA2BX,EAAU,EAAE;QAC3D,MAAMF,SAAS,MAAM,IAAI,CAACH,cAAc,CAACgB,eAAe,CAACX;QAEzD,oBAAoB;QACpB,OAAOF;IACT;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+CA1DwCc,sBAAc,CAAC;QAAEC,OAAOC;IAAO;;;;;;;;;;;;;;;;;;;;;;;mDAyB7CC,gDAAuB,CAAC;QAAC;QAAM;QAAQ;KAAU;iDAEnDA,gDAAuB,CAAC;QAAC;QAAO;KAAO;uDACjCC,4BAAa,CAACC,0CAAiB,EAAE;QAAEC,UAAU;QAAMC,UAAU;IAAK"}