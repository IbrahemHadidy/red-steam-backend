{"version":3,"sources":["../../../src/common/interceptors/serialize.interceptor.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable } from '@nestjs/common';\r\n\r\n// Class-transformer\r\nimport { plainToClass } from 'class-transformer';\r\n\r\n// RxJS\r\nimport { map } from 'rxjs/operators';\r\n\r\n// Types\r\nimport type { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';\r\nimport type { ClassConstructor } from 'class-transformer';\r\nimport type { Observable } from 'rxjs';\r\n\r\n/**\r\n * Interceptor to serialize the response data using a specified DTO class.\r\n * @param dto - DTO class\r\n * @returns Serialized data\r\n */\r\n@Injectable()\r\nexport class SerializeInterceptor implements NestInterceptor {\r\n  // The DTO class that will be used to transform the response data.\r\n  constructor(private readonly dto: ClassConstructor<unknown>) {}\r\n\r\n  // The intercept method is called for every request handled by the route where this interceptor is applied.\r\n  public intercept(_context: ExecutionContext, next: CallHandler): Observable<unknown> {\r\n    return next.handle().pipe(\r\n      map((data: unknown) => {\r\n        // Transform the plain data into an instance of the DTO class, excluding any extraneous values.\r\n        const transformedData = plainToClass(this.dto, data, {\r\n          excludeExtraneousValues: true,\r\n        });\r\n\r\n        // Return the transformed data to continue the response process.\r\n        return transformedData;\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"names":["SerializeInterceptor","constructor","dto","intercept","_context","next","handle","pipe","map","data","transformedData","plainToClass","excludeExtraneousValues"],"mappings":"AAAA,SAAS;;;;;+BAoBIA;;;eAAAA;;;wBAnBc;kCAGE;2BAGT;;;;;;;;;;AAab,IAAA,AAAMA,uBAAN,MAAMA;IACX,kEAAkE;IAClEC,YAAY,AAAiBC,GAA8B,CAAE;aAAhCA,MAAAA;IAAiC;IAE9D,2GAA2G;IACpGC,UAAUC,QAA0B,EAAEC,IAAiB,EAAuB;QACnF,OAAOA,KAAKC,MAAM,GAAGC,IAAI,CACvBC,IAAAA,cAAG,EAAC,CAACC;YACH,+FAA+F;YAC/F,MAAMC,kBAAkBC,IAAAA,8BAAY,EAAC,IAAI,CAACT,GAAG,EAAEO,MAAM;gBACnDG,yBAAyB;YAC3B;YAEA,gEAAgE;YAChE,OAAOF;QACT;IAEJ;AACF"}