{"version":3,"sources":["../../../src/common/decorators/api-descriptor.decorator.ts"],"sourcesContent":["// NestJS\r\nimport { applyDecorators } from '@nestjs/common';\r\n\r\n// Swagger decorators\r\nimport {\r\n  ApiBearerAuth,\r\n  ApiBody,\r\n  ApiConsumes,\r\n  ApiExcludeEndpoint,\r\n  ApiHeaders,\r\n  ApiOAuth2,\r\n  ApiOperation,\r\n  ApiParam,\r\n  ApiQuery,\r\n  ApiResponse,\r\n  ApiSecurity,\r\n  ApiTags,\r\n} from '@nestjs/swagger';\r\n\r\n// Types\r\nimport type {\r\n  ApiBodyOptions,\r\n  ApiHeaderOptions,\r\n  ApiParamOptions,\r\n  ApiQueryOptions,\r\n  ApiResponseOptions,\r\n} from '@nestjs/swagger';\r\nimport type { SecurityRequirementObject } from '@nestjs/swagger/dist/interfaces/open-api-spec.interface';\r\n\r\nexport interface ApiDescriptorOptions {\r\n  summary?: string;\r\n  description?: string;\r\n  parameters?: ApiParamOptions[];\r\n  body?: ApiBodyOptions;\r\n  responses?: ApiResponseOptions[];\r\n  tags?: string[];\r\n  security?: string[] | SecurityRequirementObject[];\r\n  queries?: ApiQueryOptions[];\r\n  headers?: ApiHeaderOptions[];\r\n  authBearer?: string | null;\r\n  oauth2?: { scopes: string[]; name?: string };\r\n  exclude?: boolean;\r\n  consumes?: string[];\r\n}\r\n\r\n/**\r\n * Custom Swagger decorator for defining API operations with multiple Swagger decorators.\r\n * @param options Options for defining the API operation.\r\n * @returns A combination of Swagger decorators based on the provided options.\r\n */\r\nexport function ApiDescriptor(options: ApiDescriptorOptions): MethodDecorator {\r\n  const {\r\n    summary,\r\n    description,\r\n    parameters,\r\n    body,\r\n    responses,\r\n    tags,\r\n    security,\r\n    queries,\r\n    headers,\r\n    authBearer,\r\n    oauth2,\r\n    exclude,\r\n    consumes,\r\n  } = options;\r\n\r\n  return applyDecorators(\r\n    ApiOperation({ summary, description }),\r\n    ...(parameters?.map((parameter: ApiParamOptions) => ApiParam(parameter)) || []),\r\n    ...((body && [ApiBody(body)]) || []),\r\n    ...(responses?.map((response: ApiResponseOptions) => ApiResponse(response)) || []),\r\n    ...((tags && [ApiTags(...tags)]) || []),\r\n    ...(security?.map((security: string | SecurityRequirementObject) => ApiSecurity(security)) || []),\r\n    ...(queries?.map((query: ApiQueryOptions) => ApiQuery(query)) || []),\r\n    ...((headers && [ApiHeaders(headers)]) || []),\r\n    ...((authBearer && [ApiBearerAuth(authBearer)]) || []),\r\n    ...((oauth2 && [ApiOAuth2(oauth2.scopes)]) || []),\r\n    ...((exclude && [ApiExcludeEndpoint(exclude)]) || []),\r\n    ...((consumes && [ApiConsumes(...consumes)]) || []),\r\n  );\r\n}\r\n"],"names":["ApiDescriptor","options","summary","description","parameters","body","responses","tags","security","queries","headers","authBearer","oauth2","exclude","consumes","applyDecorators","ApiOperation","map","parameter","ApiParam","ApiBody","response","ApiResponse","ApiTags","ApiSecurity","query","ApiQuery","ApiHeaders","ApiBearerAuth","ApiOAuth2","scopes","ApiExcludeEndpoint","ApiConsumes"],"mappings":"AAAA,SAAS;;;;;+BAkDOA;;;eAAAA;;;wBAjDgB;yBAgBzB;AAiCA,SAASA,cAAcC,OAA6B;IACzD,MAAM,EACJC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,IAAI,EACJC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACT,GAAGb;IAEJ,OAAOc,IAAAA,uBAAe,EACpBC,IAAAA,qBAAY,EAAC;QAAEd;QAASC;IAAY,OAChCC,YAAYa,IAAI,CAACC,YAA+BC,IAAAA,iBAAQ,EAACD,eAAe,EAAE,KAC1E,AAACb,QAAQ;QAACe,IAAAA,gBAAO,EAACf;KAAM,IAAK,EAAE,KAC/BC,WAAWW,IAAI,CAACI,WAAiCC,IAAAA,oBAAW,EAACD,cAAc,EAAE,KAC7E,AAACd,QAAQ;QAACgB,IAAAA,gBAAO,KAAIhB;KAAM,IAAK,EAAE,KAClCC,UAAUS,IAAI,CAACT,WAAiDgB,IAAAA,oBAAW,EAAChB,cAAc,EAAE,KAC5FC,SAASQ,IAAI,CAACQ,QAA2BC,IAAAA,iBAAQ,EAACD,WAAW,EAAE,KAC/D,AAACf,WAAW;QAACiB,IAAAA,mBAAU,EAACjB;KAAS,IAAK,EAAE,KACxC,AAACC,cAAc;QAACiB,IAAAA,sBAAa,EAACjB;KAAY,IAAK,EAAE,KACjD,AAACC,UAAU;QAACiB,IAAAA,kBAAS,EAACjB,OAAOkB,MAAM;KAAE,IAAK,EAAE,KAC5C,AAACjB,WAAW;QAACkB,IAAAA,2BAAkB,EAAClB;KAAS,IAAK,EAAE,KAChD,AAACC,YAAY;QAACkB,IAAAA,oBAAW,KAAIlB;KAAU,IAAK,EAAE;AAEtD"}