{"version":3,"sources":["../../../src/common/guards/jwt-access-auth.guard.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\r\n\r\n// Services\r\nimport { ConfigService } from '@nestjs/config';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { TokenBlacklistService } from '@repositories/mongo/token-blacklist/token-blacklist.service';\r\n\r\n// Types\r\nimport type { CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport type { FastifyRequest } from 'fastify';\r\n\r\ninterface JwtPayload {\r\n  id: string;\r\n  email: string;\r\n  username: string;\r\n  admin: boolean;\r\n  verified: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class JwtAccessAuthGuard implements CanActivate {\r\n  private readonly accessTokenSecret: string;\r\n\r\n  constructor(\r\n    private readonly config: ConfigService,\r\n    private readonly jwtService: JwtService,\r\n    private readonly tokenBlacklist: TokenBlacklistService,\r\n  ) {\r\n    this.accessTokenSecret = this.config.get<string>('JWT_ACCESS_TOKEN_SECRET');\r\n  }\r\n\r\n  public async canActivate(context: ExecutionContext): Promise<boolean> {\r\n    // Get context and request\r\n    const ctx = context.switchToHttp();\r\n    const request = ctx.getRequest<FastifyRequest>();\r\n\r\n    // Check if there is an access token\r\n    const token = this.extractTokenFromCookies(request.cookies);\r\n    if (!token) throw new UnauthorizedException('Access token not found');\r\n\r\n    try {\r\n      // Verify token\r\n      const payload = await this.jwtService.verifyAsync<JwtPayload>(token, { secret: this.accessTokenSecret });\r\n\r\n      // Check if the token is blacklisted\r\n      const isBlacklisted = await this.tokenBlacklist.isBlacklisted(token);\r\n      if (isBlacklisted) throw new UnauthorizedException('Token is blacklisted');\r\n\r\n      // Add payload to request\r\n      Object.assign(request, {\r\n        userId: payload.id,\r\n        email: payload.email,\r\n        username: payload.username,\r\n        admin: payload.admin,\r\n        isVerified: payload.verified,\r\n        accessToken: token,\r\n      });\r\n\r\n      return true;\r\n    } catch (err) {\r\n      throw new UnauthorizedException('Invalid token');\r\n    }\r\n  }\r\n\r\n  private extractTokenFromCookies(cookies: Record<string, string | undefined>): string | null {\r\n    const accessTokenHeader = cookies['accessToken'];\r\n\r\n    if (!accessTokenHeader || !accessTokenHeader.startsWith('Bearer ')) return null;\r\n\r\n    const token = accessTokenHeader.split(' ')[1];\r\n    return token;\r\n  }\r\n}\r\n"],"names":["JwtAccessAuthGuard","constructor","config","jwtService","tokenBlacklist","accessTokenSecret","get","canActivate","context","ctx","switchToHttp","request","getRequest","token","extractTokenFromCookies","cookies","UnauthorizedException","payload","verifyAsync","secret","isBlacklisted","Object","assign","userId","id","email","username","admin","isVerified","verified","accessToken","err","accessTokenHeader","startsWith","split"],"mappings":"AAAA,SAAS;;;;;+BAqBIA;;;eAAAA;;;wBApBqC;wBAGpB;qBACH;uCACW;;;;;;;;;;AAe/B,IAAA,AAAMA,qBAAN,MAAMA;IAGXC,YACE,AAAiBC,MAAqB,EACtC,AAAiBC,UAAsB,EACvC,AAAiBC,cAAqC,CACtD;aAHiBF,SAAAA;aACAC,aAAAA;aACAC,iBAAAA;QAEjB,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACH,MAAM,CAACI,GAAG,CAAS;IACnD;IAEA,MAAaC,YAAYC,OAAyB,EAAoB;QACpE,0BAA0B;QAC1B,MAAMC,MAAMD,QAAQE,YAAY;QAChC,MAAMC,UAAUF,IAAIG,UAAU;QAE9B,oCAAoC;QACpC,MAAMC,QAAQ,IAAI,CAACC,uBAAuB,CAACH,QAAQI,OAAO;QAC1D,IAAI,CAACF,OAAO,MAAM,IAAIG,6BAAqB,CAAC;QAE5C,IAAI;YACF,eAAe;YACf,MAAMC,UAAU,MAAM,IAAI,CAACd,UAAU,CAACe,WAAW,CAAaL,OAAO;gBAAEM,QAAQ,IAAI,CAACd,iBAAiB;YAAC;YAEtG,oCAAoC;YACpC,MAAMe,gBAAgB,MAAM,IAAI,CAAChB,cAAc,CAACgB,aAAa,CAACP;YAC9D,IAAIO,eAAe,MAAM,IAAIJ,6BAAqB,CAAC;YAEnD,yBAAyB;YACzBK,OAAOC,MAAM,CAACX,SAAS;gBACrBY,QAAQN,QAAQO,EAAE;gBAClBC,OAAOR,QAAQQ,KAAK;gBACpBC,UAAUT,QAAQS,QAAQ;gBAC1BC,OAAOV,QAAQU,KAAK;gBACpBC,YAAYX,QAAQY,QAAQ;gBAC5BC,aAAajB;YACf;YAEA,OAAO;QACT,EAAE,OAAOkB,KAAK;YACZ,MAAM,IAAIf,6BAAqB,CAAC;QAClC;IACF;IAEQF,wBAAwBC,OAA2C,EAAiB;QAC1F,MAAMiB,oBAAoBjB,OAAO,CAAC,cAAc;QAEhD,IAAI,CAACiB,qBAAqB,CAACA,kBAAkBC,UAAU,CAAC,YAAY,OAAO;QAE3E,MAAMpB,QAAQmB,kBAAkBE,KAAK,CAAC,IAAI,CAAC,EAAE;QAC7C,OAAOrB;IACT;AACF"}