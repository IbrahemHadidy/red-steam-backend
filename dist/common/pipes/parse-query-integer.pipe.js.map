{"version":3,"sources":["../../../src/common/pipes/parse-query-integer.pipe.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable, PipeTransform } from '@nestjs/common';\r\nimport { ParseIntPipe } from '@nestjs/common/pipes';\r\n\r\n// Types\r\nimport type { ParseIntPipeOptions } from '@nestjs/common/pipes';\r\n\r\n/**\r\n * Pipe to parse optional query integer\r\n * @param options - Options for ParseIntPipe\r\n * @returns Parsed data\r\n */\r\n@Injectable()\r\nexport class ParseQueryIntPipe implements PipeTransform {\r\n  private parseIntPipe: ParseIntPipe;\r\n\r\n  constructor(options?: ParseIntPipeOptions) {\r\n    this.parseIntPipe = new ParseIntPipe(options);\r\n  }\r\n\r\n  public async transform(value: string | null | undefined): Promise<number | undefined> {\r\n    if (value === undefined || value === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return await this.parseIntPipe.transform(value, {\r\n      type: 'query',\r\n    });\r\n  }\r\n}\r\n"],"names":["ParseQueryIntPipe","constructor","options","parseIntPipe","ParseIntPipe","transform","value","undefined","type"],"mappings":"AAAA,SAAS;;;;;+BAaIA;;;eAAAA;;;wBAZ6B;uBACb;;;;;;;;;;AAWtB,IAAA,AAAMA,oBAAN,MAAMA;IAGXC,YAAYC,OAA6B,CAAE;QACzC,IAAI,CAACC,YAAY,GAAG,IAAIC,mBAAY,CAACF;IACvC;IAEA,MAAaG,UAAUC,KAAgC,EAA+B;QACpF,IAAIA,UAAUC,aAAaD,UAAU,MAAM;YACzC,OAAOC;QACT;QAEA,OAAO,MAAM,IAAI,CAACJ,YAAY,CAACE,SAAS,CAACC,OAAO;YAC9CE,MAAM;QACR;IACF;AACF"}