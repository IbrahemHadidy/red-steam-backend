{"version":3,"sources":["../../../src/common/pipes/parse-query-boolean.pipe.ts"],"sourcesContent":["// NestJS\r\nimport { Injectable, PipeTransform } from '@nestjs/common';\r\nimport { ParseBoolPipe } from '@nestjs/common/pipes';\r\n\r\n// Types\r\nimport type { ParseBoolPipeOptions } from '@nestjs/common/pipes';\r\n\r\n/**\r\n * Pipe to parse optional query boolean\r\n * @param options - Options for ParseBoolPipe\r\n * @returns Parsed data\r\n */\r\n@Injectable()\r\nexport class ParseQueryBoolPipe implements PipeTransform {\r\n  private parseBoolPipe: ParseBoolPipe;\r\n\r\n  constructor(options?: ParseBoolPipeOptions) {\r\n    this.parseBoolPipe = new ParseBoolPipe(options);\r\n  }\r\n\r\n  public async transform(value: string | null | undefined): Promise<boolean | undefined> {\r\n    if (value === undefined || value === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return await this.parseBoolPipe.transform(value, {\r\n      type: 'query',\r\n    });\r\n  }\r\n}\r\n"],"names":["ParseQueryBoolPipe","constructor","options","parseBoolPipe","ParseBoolPipe","transform","value","undefined","type"],"mappings":"AAAA,SAAS;;;;;+BAaIA;;;eAAAA;;;wBAZ6B;uBACZ;;;;;;;;;;AAWvB,IAAA,AAAMA,qBAAN,MAAMA;IAGXC,YAAYC,OAA8B,CAAE;QAC1C,IAAI,CAACC,aAAa,GAAG,IAAIC,oBAAa,CAACF;IACzC;IAEA,MAAaG,UAAUC,KAAgC,EAAgC;QACrF,IAAIA,UAAUC,aAAaD,UAAU,MAAM;YACzC,OAAOC;QACT;QAEA,OAAO,MAAM,IAAI,CAACJ,aAAa,CAACE,SAAS,CAACC,OAAO;YAC/CE,MAAM;QACR;IACF;AACF"}